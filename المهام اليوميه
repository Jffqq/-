<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>تطبيق المهام اليومية</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-database.js"></script>
  <style>
    body {
      background-color: #f8f9fa;
      font-family: 'Arial', sans-serif;
    }
    .container {
      max-width: 500px;
      margin: auto;
      margin-top: 50px;
    }
  </style>
</head>
<body>
  <div id="authPage" class="container">
    <h1 class="text-center mb-4">تسجيل الدخول</h1>
    <div id="loginForm">
      <input type="email" id="emailInput" class="form-control mb-3" placeholder="البريد الإلكتروني">
      <input type="password" id="passwordInput" class="form-control mb-3" placeholder="كلمة المرور">
      <button id="loginBtn" class="btn btn-primary w-100 mb-3">تسجيل الدخول</button>
      <button id="showRegisterBtn" class="btn btn-link w-100">إنشاء حساب جديد</button>
    </div>
    <div id="registerForm" style="display: none;">
      <input type="email" id="regEmailInput" class="form-control mb-3" placeholder="البريد الإلكتروني">
      <input type="password" id="regPasswordInput" class="form-control mb-3" placeholder="كلمة المرور">
      <button id="registerBtn" class="btn btn-primary w-100 mb-3">إنشاء حساب</button>
      <button id="showLoginBtn" class="btn btn-link w-100">عودة لتسجيل الدخول</button>
    </div>
  </div>

  <div id="tasksPage" class="container" style="display: none;">
    <h1 class="text-center mb-4">تطبيق المهام اليومية</h1>
    <button id="logoutBtn" class="btn btn-danger mb-3 w-100">تسجيل الخروج</button>
    <input id="taskInput" type="text" class="form-control mb-3" placeholder="أدخل المهمة">
    <select id="prioritySelect" class="form-select mb-3">
      <option value="low">أولوية منخفضة</option>
      <option value="medium">أولوية متوسطة</option>
      <option value="high">أولوية عالية</option>
    </select>
    <button id="addTaskBtn" class="btn btn-primary w-100 mb-3">إضافة مهمة</button>
    <h5>قائمة المهام:</h5>
    <ul id="taskList" class="list-unstyled"></ul>
  </div>

  <script>
    // Firebase Configuration
    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
      databaseURL: "https://YOUR_PROJECT_ID.firebaseio.com",
      projectId: "YOUR_PROJECT_ID",
      storageBucket: "YOUR_PROJECT_ID.appspot.com",
      messagingSenderId: "YOUR_SENDER_ID",
      appId: "YOUR_APP_ID"
    };

    // Initialize Firebase
    const app = firebase.initializeApp(firebaseConfig);
    const auth = firebase.getAuth();
    const db = firebase.getDatabase();

    // عناصر DOM
    const authPage = document.getElementById('authPage');
    const tasksPage = document.getElementById('tasksPage');
    const emailInput = document.getElementById('emailInput');
    const passwordInput = document.getElementById('passwordInput');
    const loginBtn = document.getElementById('loginBtn');
    const showRegisterBtn = document.getElementById('showRegisterBtn');
    const regEmailInput = document.getElementById('regEmailInput');
    const regPasswordInput = document.getElementById('regPasswordInput');
    const registerBtn = document.getElementById('registerBtn');
    const showLoginBtn = document.getElementById('showLoginBtn');
    const logoutBtn = document.getElementById('logoutBtn');
    const taskInput = document.getElementById('taskInput');
    const prioritySelect = document.getElementById('prioritySelect');
    const addTaskBtn = document.getElementById('addTaskBtn');
    const taskList = document.getElementById('taskList');

    // تبديل بين الصفحات
    const togglePages = (showTasks) => {
      if (showTasks) {
        authPage.style.display = 'none';
        tasksPage.style.display = 'block';
        loadTasks();
      } else {
        authPage.style.display = 'block';
        tasksPage.style.display = 'none';
      }
    };

    // تسجيل المستخدم
    registerBtn.addEventListener('click', async () => {
      const email = regEmailInput.value;
      const password = regPasswordInput.value;
      try {
        await firebase.createUserWithEmailAndPassword(auth, email, password);
        alert('تم إنشاء الحساب بنجاح!');
        togglePages(false);
      } catch (error) {
        alert('خطأ: ' + error.message);
      }
    });

    // تسجيل الدخول
    loginBtn.addEventListener('click', async () => {
      const email = emailInput.value;
      const password = passwordInput.value;
      try {
        await firebase.signInWithEmailAndPassword(auth, email, password);
        togglePages(true);
      } catch (error) {
        alert('خطأ: ' + error.message);
      }
    });

    // تسجيل الخروج
    logoutBtn.addEventListener('click', async () => {
      await firebase.signOut(auth);
      togglePages(false);
    });

    // إضافة مهمة
    addTaskBtn.addEventListener('click', () => {
      const task = taskInput.value.trim();
      const priority = prioritySelect.value;
      if (!task) return alert('الرجاء إدخال المهمة!');
      const userId = auth.currentUser.uid;
      const tasksRef = firebase.ref(db, 'tasks/' + userId);
      firebase.push(tasksRef, { text: task, priority, completed: false });
      taskInput.value = '';
    });

    // تحميل المهام
    const loadTasks = () => {
      const userId = auth.currentUser.uid;
      const tasksRef = firebase.ref(db, 'tasks/' + userId);
      firebase.onValue(tasksRef, (snapshot) => {
        const tasks = snapshot.val();
        taskList.innerHTML = '';
        for (const id in tasks) {
          const task = tasks[id];
          addTaskToDOM(task, id);
        }
      });
    };

    // إضافة مهمة إلى DOM
    const addTaskToDOM = (task, id) => {
      const li = document.createElement('li');
      li.className = `task-item priority-${task.priority}`;
      li.innerHTML = `
        <span>${task.text}</span>
        <button class="btn btn-danger btn-sm float-end" onclick="deleteTask('${id}')">حذف</button>
      `;
      taskList.appendChild(li);
    };

    // حذف مهمة
    const deleteTask = (id) => {
      const userId = auth.currentUser.uid;
      const taskRef = firebase.ref(db, `tasks/${userId}/${id}`);
      firebase.remove(taskRef);
    };

    // تبديل الصفحات عند التحميل
    auth.onAuthStateChanged((user) => {
      togglePages(!!user);
    });
  </script>
</body>
</html>
